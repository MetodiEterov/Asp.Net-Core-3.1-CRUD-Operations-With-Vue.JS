// <auto-generated />
namespace Repository.Layer
{
    using System;
    using System.Collections.Generic;
    using System.Linq;

    using Entities.Contracts;
    using Entities.DbContext;
    using Entities.Models;

    /// <summary>
    /// A representation of AccountRepository class
    /// </summary>
    public class AccountRepository : RepositoryBase<Account>, IAccountRepository
    {
        /// <summary>
        /// AccountRepository constructor
        /// </summary>
        /// <param name="repositoryContext"></param>
        public AccountRepository(RepositoryContext repositoryContext)
            : base(repositoryContext)
        {
        }

        /// <summary>
        /// AccountsByOwner method
        /// </summary>
        /// <param name="ownerId"></param>
        /// <returns></returns>
        public IEnumerable<Account> AccountsByOwner(Guid ownerId)
        {
            return FindByCondition(a => a.OwnerId.Equals(ownerId)).ToList();
        }
    }
}
